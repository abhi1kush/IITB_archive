#copy4 Global flow in concurrent programs
import thread
import time
import threading


def thread1():
    global x
    global e0
    global e1
    if x==0:
        e0 = False
    else:
        e1 = False

def thread2(): 
    global e0
    global e1
    global y
    while e0:
        pass

    y = 1
    e1 = False

def thread3():
    global e1
    global e0
    global y
    while e1:
        pass
    y = 0
    e0 = False

try:
    thread.start_new_thread(thread1,())
    thread.start_new_thread(thread2,())
    thread.start_new_thread(thread3,())
except:
    print "Error: unable to start thread"



####################################################
got thread call
xLabel <= e0
xLabel <= e1
got thread call
### While Iteration: 1
-> PC: [['e0Label', 'xLabel']]
### While Iteration: 2
-> PC: [['e0Label', 'xLabel']]
Saturation point of loop!
e0Label + xLabel <= y
e0Label + xLabel <= e1
got thread call
### While Iteration: 1
-> PC: [['e0Label', 'e1Label', 'xLabel']]
### While Iteration: 2
-> PC: [['e0Label', 'e1Label', 'xLabel']]
Saturation point of loop!
e0Label + xLabel + e1Label <= y
e0Label + xLabel + e1Label <= e0
